{
    /* ============= GENERAL_TWEAKS ============= */
    // fuck telemetry
    "telemetry.enableTelemetry": false,
    "partialDiff.enableTelemetry": false,
    "gitlens.advanced.telemetry.enabled": false,

    // enable git autofetch, and some git tweaking
    "git.autofetch": true,
    "gitlens.views.repositories.files.layout": "tree",
    
    // some editor tweaking
    "editor.suggestSelection": "first",
    "extensions.ignoreRecommendations": true,
    "window.zoomLevel": 0,  
    "files.associations": {
        "*.nasm": "asm-collection",
        "*.jhtml": "jinja-html"
    },

    // some workbench tweaking
    // set monokai dimmed them, move panel to the right, set bigger indent to tree.
    "workbench.colorTheme": "Monokai Dimmed",
    "workbench.startupEditor": "welcomePage",
    "workbench.sideBar.location": "right",
    "workbench.tree.indent": 20,
    "workbench.activityBar.visible": true,
    "workbench.editorAssociations": [
        {
            "viewType": "jupyter.notebook.ipynb",
            "filenamePattern": "*.ipynb"
        }
    ],

    // indentation fixes. Disable indentation delection, force \n (\r\n sucks shit) and insert trailing newline
    "editor.detectIndentation": false,
    "files.eol": "\n",
    "files.insertFinalNewline": true,
    /* ============= GENERAL_TWEAKS ============= */

 
    /* ============= PYTHON ============= */
    // disable pylint and force flake8
    "python.linting.enabled": true,
    "python.linting.pylintEnabled": false,
    "python.linting.flake8Enabled": true,
    "python.linting.flake8Args": [
        "--max-line-length=150",
        "--ignore=F401,E402,E122,F403,E226,F405,F841,E501,E265,E203,E231", // e203 and e231 is errors with := operator
    ],
    "python.linting.pylintArgs": [
        "--load-plugins",
        "pylint_flask"
    ],
    "python.formatting.autopep8Args": [
        "--max-line-length=150"
    ],
    // force usage of pylance
    "python.languageServer": "Pylance",
    /* ============= PYTHON ============= */

    
    /* ============= C/CPP ============= */
    // force C11/C++11,
    "C_Cpp.default.cStandard": "c11",
    "C_Cpp.default.cppStandard": "c++11",
    // enable clang and setup clang format style
    "C_Cpp.formatting": "clangFormat",
    "C_Cpp.clang_format_fallbackStyle": "{ BasedOnStyle: Google, IndentWidth: 4, ColumnLimit: 0, AlignConsecutiveMacros : true}",
    /* ============= C/CPP ============= */

    
    /* ============= Latex ============= */
    // crazy latex settings. Generally, 
    // xelatex runs xelatex -> bibtex -> xelatex
    // xelatex_normal runs xelatex one one time
    // pdflatex - pdflatex one time
    // latexmk also runs latexmk once
    // pdflatex âžž bibtex âžž pdflatexâ€ŠÃ—â€Š2 selfdescrible
    "latex-workshop.latex.recipes": [
        {
            "name": "xelatex",
            "tools": [
                "xelatex",
                "bibtex",
                "xelatex"
            ]
        },
        {
            "name": "xelatex_normal",
            "tools": [
                "xelatex"
            ]
        },
        {
            "name": "pdflatex",
            "tools": [
                "pdflatex"
            ]
        },
        {
            "name": "latexmk ðŸ”ƒ",
            "tools": [
                "latexmk"
            ]
        },
        {
            "name": "pdflatex âžž bibtex âžž pdflatexâ€ŠÃ—â€Š2",
            "tools": [
                "pdflatex",
                "bibtex",
                "pdflatex",
                "pdflatex"
            ]
        },
    ],

    // this is a crazy shit to deal with latex in WSL, but without running the code inside WSL ;)
    "latex-workshop.latex.tools": [
        {
            "name": "latexmk",
            "command": "bash",
            "args": [
                "-c",
                "latexmk",
                "-synctex=1",
                "-interaction=nonstopmode",
                "-file-line-error",
                "-pdf",
                "-outdir='%OUTDIR%'",
                "'%DOC%'"
            ],
            "env": {}
        },
        {
            "name": "pdflatex",
            "command": "bash",
            "args": [
                "-c",
                "pdflatex -synctex=1 -interaction=nonstopmode -file-line-error %DOCFILE%",
            ],
            "env": {}
        },
        {
            "name": "xelatex",
            "command": "bash",
            "args": [
                "-c",
                "xelatex -synctex=1 -interaction=nonstopmode -file-line-error %DOCFILE%",
            ],
            "env": {}
        },
        {
            "name": "bibtex",
            "command": "bash",
            "args": [
                "-c",
                "bibtex %DOCFILE%",
            ],
            "env": {}
        },
        {
            "name": "bibtex_w",
            "command": "bash",
            "args": [
                "-c",
                "bibtex `wslpath -a \"%DOCFILE%\"` `wslpath -a \"%DOC%\"`",
            ],
            "env": {}
        }
    ],
    "latex-workshop.latexindent.args": [
        "-c",
        // -c,%DIR%/,%TMPFILE%,-y=defaultIndent: '%INDENT%'
        "latexindent -c `wslpath -a \"%DIR%/\"`/l `wslpath -a \"%TMPFILE%\"`", //  \"-y=defaultIndent: '%INDENT%'\"
    ],
    "latex-workshop.latexindent.path": "bash",
    "latex-workshop.view.pdf.viewer": "tab",
    "latex-workshop.latex.recipe.default": "lastUsed",
    "latex-workshop.latex.build.forceRecipeUsage": true,
    /* ============= Latex ============= */

    /* ============= Some other options ============= */
    // asm?
    "asm-code-lens.enableCodeLenses": false,

    // WSL tweak for maybe more stable things
    "remote.WSL.fileWatcher.polling": true,

    // todo tree tweaks, add some keywords
    "todo-tree.tree.showScanModeButton": false,
    "todo-tree.general.tags": [
        "TODO",
        "FIXME",
        "WTF"
    ],

    // does we need whitespaces?
    "diffEditor.ignoreTrimWhitespace": false,

    // java wtf
    "java.requirements.JDK11Warning": false,
    "java.semanticHighlighting.enabled": false,

    // just for fun
    "discord.smallImage": "vim",
    
    // some jupyter tweaks
    "jupyter.askForKernelRestart": false,
    "jupyter.alwaysTrustNotebooks": true,

    // select yaml scheme for drone-ci
    "yaml.schemas": {
        "http://json.schemastore.org/drone": ["*drone.yml"]
    }
    /* ============= Some other options ============= */
}
